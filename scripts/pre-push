#!/bin/sh

# Verify
#   - no "wip: ..." commits
#   - no missing Signed-off-by:
#   - code does not contain debug patterns (e.g. dbg!())

remote="$1"
url="$2"

zero=$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')

while read local_ref local_oid remote_ref remote_oid
do
    if test "$local_oid" = "$zero"
    then
        # Handle delete
        :
    else
        if test "$remote_oid" = "$zero"
        then
            # New branch, examine all commits
            range="$local_oid"
        else
            # Update to existing branch, examine new commits
            range="$remote_oid..$local_oid"
        fi

        # Check for 'wip:' commit
        commit=$(git rev-list -n 1 --grep '^wip:' "$range")
        if test -n "$commit"
        then
            echo >&2 "Found wip: commit in $local_ref, not pushing"
            exit 1
        fi

        # Check for missing Signed-off-by: trailer
        commit=$(git rev-list -n 1 --invert-grep --grep '^Signed-off-by:' "$range")
        if test -n "$commit"
        then
            echo >&2 "Missing Signed-off-by in commit in $local_ref, not pushing"
            exit 1
        fi

        # Check for debug patterns in code still left
        # Note: assumes current working tree is representative of commits
        packages=$(git diff --name-only "$range" |
            grep -E -e '^[0-9]{4}/[0-9]{2}/' |\
            cut -c1-7 |\
            sort -u |\
            sed 's+/+-+' |\
            sed 's+^+aoc-+')
        for p in $packages; do
            bad_patterns=$(cargo expand --package=$p 2>/dev/null | grep \
                -e 'dbg!(.*)' \
                -e 'println!(.*)' \
                -e 'aoc::run_with_expected_range(.*)' \
                -e 'aoc::run(.*)')
            if test -n "$bad_patterns"
            then
                echo >&2 "Bad patterns found commit(s) in $local_ref, not pushing"
                echo >&2 "$bad_patterns"
                exit 1
            fi
        done
    fi
done

exit 0
